프로그램코드(program code)
: 컴퓨터 프로그램을 프로그래밍 언어로 작성한 코드

프로그래밍 : 코드를 작성하는 행위
프로그래밍 언어 : 컴퓨터에 명령 내리기 위한 언어

웹을 이루는 중요한 프로그래밍 언어 세가지
HTML. CSS. JAVASCRIPt

HTML : HyperText -> 순서대로가 아닌 원하는 곳으로 옮길 수 있음
       Markup Language -> 태그를 이용해 문서나 데이터의 구조를 명시하는 언어
      즉, HTML이란 웹 페이지의 구조 혹은 데이터 작성을 위한 마크업 언어
CSS : Cascading Style Sheets
    : Style Sheets : 웹 페이지의 스타일과 관련된 모든 것을 정해둠
    : 즉, 웹페이지에 관한 다양한 스타일들을 정의
JAVASCRIPT : 웹을 이용하는 유저와 상호작용 하기 위한 기능을 추가할 때 쓰는 언어


웹페이지의 structure 담당  : HTML
웹페이지의 style 담당  : CSS
웹페이지의 behaviors 담당  : JAVASCRIPT

태그 : 내용을 나누고 어떤 역할을 하는지 구조를 정의
시작 태그 : 컨텐츠의 시작을 표시
종료 태그 : 컨텐츠의 끝을 표시



<!DOCTYPE HTML> : 문서 형식을 정의한다.
<html lang = "kr">  : html문서 내에서 <html></html>은 
                      딱 한번만 사용할 수 있다.
                    : 본격적인 태그의 시작
                    : 사용하는 주 언어를 정의
<meta charset="utf-8"> : 문서와 관련된 정보를 담음
                       : 한글이 깨지지 않도록 도와줌
<title> 웹 브라우저의 제목을 담는 태그
<body> 본문을 적는 태그
<br> 줄바꿈태그


[[레이아웃layout]]

시맨틱태그(semantic tag) : 의미를 가지고 있는 태그
1. header : 웹페이지 혹은 <section>의 소개나 제목을 담기 위해 사용하는 요소
2. nav : 네비게이션 역할, 페이지 이동을 위한 메뉴를 주로 담고 잇음
3. section : 기준에 따라 구획을 구분하기 위해 사용하는 요소
4. article : 주 내용을 담기 위한 태그
5. aside : 광고나 사이트의 주변 부분에 해당하는 내용을 담기 위한 태그 --> 주로 광고
6. footer : 웹사이트의 가장 아래 -> 회사 정보와 같은 추가 정보를 담기 위해 사용하는 요소

[[텍스트와 관련된 태그]]

제목 태그 : 제목을 나타내고 싶을 때 사용
       : 중요도에 따라 1~6까지 씀(h1~h6)

본문 태그 : 한 내용(문단)이라고 생각되면 p 태그로 묶으면 됨
       : 엔터를 쳐도 인식 못함 -> br태그 사용 (br태그는 종료태그가 없음)
         pre태그는 들여쓰기를 그대로 화면에 나타냄
        
글자와 관련된 태그 : strong태그 : 단어 강조 (굵은체로 나타냄)
             : em태그 : 단어 강조 (옆으로 휘어진 체)
             : sub태그 : 일반위치보다 아래로(로그의 밑)
             : sup태그 : 일반위치보다 위로(제곱의 지수)
             : ins태그 : 밑줄
             : del태그 : 취소선 
            
[[링크태그]]
-> 하이퍼링크 역할을 함
-> URL(Uniform Resource Locator) 
   : 인터넷에서 HTML 페이지, CSS 문서, 이미지 등 자원(resource)의 위치를 나타냄 
   1) 절대URL(Absolute URL)
      접근하는 최초 시작점부터 경유한 경로를 모두 기록하여 리소스의 위치를 나타냄
   2) 상대URL(Relative URL)
      기준점을 기준으로 상대적인 경로를 기록하여 리소스의 위치를 나타냄   
   
-> <a> </a>
-> 태그 이름 뒤에 속성(attribute)을 추가할 수 있음
-> 속성 : 태그에 대해 추가적인 정보 제공
        HTML의 모든 태그는 속성을 가질 수 있음
-> <a 키="값">구글</a>
-> <a 링크주소="www.google.com">구글</a>
-> 여러 개의 속성을 갖고 있을 때에는 띄어쓰기로 구분

-> <a href = "www.naver.com">naver</a>
   => naver라는 링크이름을 클릭하면 위의 주소로 넘어감
-> <a href = "www.naver.com" target = "_blank">naver</a>
   => 현재 탭에서 링크를 여는 속성
-> <a href = "www.naver.com" target = "_self">naver</a>
   => 새 탭(창)에서 링크를 여는 속성
-> <a href = "./index.html">name</a>
   => html링크를 달고 싶으면 앞에 ./추가
->  <a href = "https://en.wikipedia.org/wiki/Brown_bear" target = "_blank">
    <img scr = "https://en.wikipedia.org/wiki/Brown_bear"/></a>
    => 이미지를 같이 감싸서 페이지에 이미지를 변환한다 (?)
-> <li><a href = "#Introduction">introduction</a></li>
   => 링크가 연결되는데 클릭하면 <div id = "introduction> 부분으로 넘어감(페이지안에서)
   
-> 주석 달기 
   <!--content-->
  
[[이미지 태그]]
-> <img>태그
   : <img src = "이미지 url">     //이미지태그는 비어있는 속성이기 때문에 종료태그 없음
     => src = "이미지 url" : 불러올 이미지의 URL을 속성 값으로 가짐
                         : src는 source(근원)의 약자

   : <img src = "이미지 url" alt = "사진설명">
     => alt="사진설명" : 불러올 이미지가 없거나 불러오는데 실패했을 경우 대신 표시되는 문장
                    : alternative text(대체문구)의 약자
   : 네이버에서 이미지 고르고 이미지의 주소 복사해주면 이미지의 url이 복사될거임 -> 복붙!

-> weight = "수치"
   height = "수치" 
   : 이미지의 높이와 너비를 지정할 때 쓰는 속성 (img태그 안에 넣어주면 됨)
     CSS에서 조정하기를 권장한다
-> 영상 넣는 방법
   youtube의 영상에서 공유 - 링크 퍼가기 - 코드 복사 - 붙여넣기
   : EX) <iframe src="https://www.youtube.com/embed/IRNBtocmQ58></iframe>
     - 여기서 IR~~8은 유튜브 영상 ID
       영상 ID의 수정으로 다른 유튜브 영상으로 바꿀 수 있음
       
[[테이블]]

-> <table>태그 : 표 만들기
-> 표의 구성 : 제목 셀 ,데이터 셀, 행
  
-> <table> : 표 전체를 감싸는 태그
   <tr>    : 표에서 행을 구분하는 태그 (table row)
   <th>    : 표의 행 내부에 제목 셀을 담는 태그 (table heading)
   <td>    : 표의 행 내부에 데이터 셀을 담는 태그 (table data
   
-> rowspan="숫자" : "숫자"만큼 셀이 행을 점유
   colspan="숫자" : "숫자"만큼 셀이 열을 점유
   => td나 tr태그 안에 써주면 됨
   
[[목록]]

-> 순서 없는 목록(unordered list)
   => <ul></ul>태그 
   
-> 순서 있는 목록(ordered list)
   => <ol></ol>태그
   
   -> 목록은 <li></li>태그
 
-> 속성 
   <ol>태그 (태그 안에 적어주면 됨)
   => start="숫자"   : 리스트가 시작하는 숫자를 정함
   => type="문자"    : 순서를 시작하는 문자를 정함
   => reversed     : 순서를 반대로 시작, 다른 속성과 달리 키(Key)만 써서 사용
   
   <li>태그
   => value="숫자"   : 해당하는 리스트 아이템의 번호를 지정

[[폼 태그]]
-> 웹 브라우저에서 서버로 데이터를 보낸다
   이 데이터는 header와 body로 이루어진 message에 담겨서 보내진다.
   
-> <form>태그 : 폼에 포함되는 다양한 입력 양식 태그들을 감싸줌
            : 여기부터 여기까지가 form이에요~

-> action : 데이터를 보낼 URL을 지정
-> method : 보내는 방식을 지정
  => method="get"   : 데이터를 URL 끝에 붙여 눈에 보이게 보냄 (엽서처럼)
     method="post"  : 데이터를 URL에 적지 않고 내부에 숨겨서 보냄 (밀봉된 편지처럼)

★ 매우 중요 ★
-> get방식 특징 : 데이터 조회 만을 목적으로 할 때 주로 쓰임
             : EX) 검색어가 바뀌면 주소창에서도 같이 바뀜
-> post방식 특징 : 서버에 있는 데이터를 쓰거나 수정, 삭제할 때 주로 사용됨
              : EX) 게시물 작성 , 삭제해도 주소창은 그대로
              
-> <input>태그 : 사용자에게 입력을 받기 위해 사용되는 태그, 빈 태그
   => <input type = "text"> : <input>태그의 종류를 결정
   => <input type = "text", name = "id"> : <input>태그 중 같은 타입과 구분되는 이름을 결정
   => input 칸 안에 아이디를 입력하면 주소창에도 같이 뜸 (get 방식을 사용했을 때)
   => placeholder="아이디를 입력하세요." : input에 아무 값도 입력되지 않았을 때 나타나는 텍스트 
   => value="soonho" : 실제 할당되는 값
                     : 우리가 데이터를 넣으면 이 속성에 값이 들어감
                     : 초기값처럼 둘 수 있음
                     : input 칸 안에 soonho라고 적혀있을거고 마우스를 클릭해도 사라지지 않을 것임
                       값을 적으면 soonho뒤에 이어져서 적힘

-> <label>태그 : 해당하는 라벨을 클릭 시 <input>태그가 활성화 됨
              : input 태그 앞에 들어가게 됨
              : <label for =""></label>
              
-> <div>태그 : 태그들을 구분짓고 나누기 위해 사용되는 태그 (division의 약자)
            : <div>태그 안에 <label>태그를 따로 따로 적어주면됨
            
-> <select>태그 : 여러 개의 선택지를 제시하고 싶을 때 씀
               : <select>
                     <option></option>
                 </select>
               : <select name="gender"> : <input>태그의 name속성과 동일하게 작동
               : <option value="male">남성</option> : <input>태그에서 입력한 값과 동일한 역할 


-> <textarea>태그 : 한 번에 많은 글을 입력받을 때 사용 
                 :<textarea></textarea>
                 
-> <button>태그 : <input>태그의 버튼타입과 동일하게 버튼을 생성 
               : <input type = "button" value = "회원가입">
                 = <button type = "submit">회원가입</button>
               : <button type = "reset"> 태그 적으면 입력했던 input값들이 초기화됨
               
[table 태그]

The <table> element creates a table.
The <tr> element adds rows to a table.
To add data to a row, you can use the <td> element.
Table headings clarify the meaning of data. Headings are added with the <th> element.
Table data can span columns using the colspan attribute.
Table data can span rows using the rowspan attribute.
Tables can be split into three main sections: a head, a body, and a footer.
A table’s head is created with the <thead> element.
A table’s body is created with the <tbody> element.
A table’s footer is created with the <tfoot> element.
All the CSS properties you learned about in this course can be applied to tables and their data.
         
       




























